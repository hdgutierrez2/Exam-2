public int minFallingPathSum(int[][] A) {
        int n = A.length;
        int[][] dp = new int[n][n];
        dp[0] = A[0];
        for (int i=1; i<n; i++){
                for (int j=0; j<n; j++){
                        dp[i][j] = A[i][j] + dp[i-1][j];
                        if (j > 0){
                                dp[i][j] = Math.min(dp[i][j], A[i][j] + dp[i-1][j-1]);
                        }
                        if (j < n-1){
                                dp[i][j] = Math.min(dp[i][j], A[i][j] + dp[i-1][j+1]);
                        } 
                }
        }
        int min = Integer.MAX_VALUE; //we store the max value to compare it.
        for(int i=0; i<n; i++){
            if(dp[n-1][i] < min){
                min = dp[n-1][i];
            }
        }
        return min;
}
